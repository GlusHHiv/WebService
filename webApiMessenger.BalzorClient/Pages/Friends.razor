@page "/friends"
@inject UserService UserService
@inject NavigationManager NavigationManager
@inherits LayoutComponentBase
<h3>Friends</h3>

<div class="card">
    <div class="card-body">
        <Loading IsLoading="@_isLoading">
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in users)
                    {
                        <tr>
                            <td>@user.Id</td>
                            <td>@user.Nick</td>
                            @if (friends.Contains(user))
                            {
                                <td>
                                    <button class="btn btn-success m-1"
                                    @onclick="() => SendMessage(user.Id)">
                                        Send Message
                                    </button>
                                </td>
                            }
                            else
                            {
                                <td>
                                    <button class="btn btn-success m-1"
                                    @onclick="() => AddFriend(user.Id)">
                                        Add Friend
                                    </button>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </Loading>
    </div>
</div>

@code {

    private HttpClient _client;
    private bool _isLoading = true;
    public ICollection<UserWithoutFriendsDTO>? friends;
    public ICollection<UserWithoutFriendsDTO>? users;

    protected override async Task OnInitializedAsync()
    {
        friends = await UserService.GetFriends();
        users = await UserService.GetUsers();
        _isLoading = false;
    }

    public async Task AddFriend(int id)
    {
        await UserService.AddFriend(id);
        var newFriend = users.FirstOrDefault(x => x.Id == id);
        friends.Add(newFriend);
    }
    
    public async Task SendMessage(int userid)
    {
        var id = await UserService.CreateDialogue(userid);
        
        NavigationManager.NavigateTo("/chat/id");
    }
}