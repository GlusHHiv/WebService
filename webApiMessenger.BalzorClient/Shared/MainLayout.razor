@using Blazored.SessionStorage
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject ISessionStorageService SessionStorage

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <NotAuthorized>
                    <NavLink href="/login">SignIn</NavLink>
                    <NavLink href="/register">SingUp</NavLink>
                </NotAuthorized>
                <Authorized>
                    <NavLink href="/profile"><span>@_authenticationState?.User?.Identity?.Name</span></NavLink>
                    <button class="btn btn-outline-danger ms-3" @onclick="LogOut">
                        Log out
                    </button>
                </Authorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code
{
    private AuthenticationState? _authenticationState = null;

    protected override async Task OnInitializedAsync()
    {
        _authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        AuthenticationStateProvider.AuthenticationStateChanged += task => StateHasChanged();
        await base.OnInitializedAsync();
    }

    private async Task LogOut()
    {
        await LocalStorage.ClearAsync();
        await SessionStorage.ClearAsync();
        NavigationManager.NavigateTo("/");
    }
}
