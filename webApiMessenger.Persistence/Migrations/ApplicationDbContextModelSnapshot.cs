// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webApiMessenger.Persistence;

#nullable disable

namespace webApiMessenger.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("GroupChatUser", b =>
                {
                    b.Property<int>("GroupChatsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MembersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupChatsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("GroupChatUser");
                });

            modelBuilder.Entity("MessageUser", b =>
                {
                    b.Property<int>("LastReadMessagesInGroupChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReadedById")
                        .HasColumnType("INTEGER");

                    b.HasKey("LastReadMessagesInGroupChatId", "ReadedById");

                    b.HasIndex("ReadedById");

                    b.ToTable("MessageUser");
                });

            modelBuilder.Entity("webApiMessenger.Domain.Entities.GroupChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GroupChats");
                });

            modelBuilder.Entity("webApiMessenger.Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupChatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SendDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("SenderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("webApiMessenger.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegisterDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GroupChatUser", b =>
                {
                    b.HasOne("webApiMessenger.Domain.Entities.GroupChat", null)
                        .WithMany()
                        .HasForeignKey("GroupChatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webApiMessenger.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MessageUser", b =>
                {
                    b.HasOne("webApiMessenger.Domain.Entities.Message", null)
                        .WithMany()
                        .HasForeignKey("LastReadMessagesInGroupChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webApiMessenger.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("ReadedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webApiMessenger.Domain.Entities.Message", b =>
                {
                    b.HasOne("webApiMessenger.Domain.Entities.GroupChat", "GroupChat")
                        .WithMany("Messages")
                        .HasForeignKey("GroupChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webApiMessenger.Domain.Entities.User", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupChat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("webApiMessenger.Domain.Entities.User", b =>
                {
                    b.HasOne("webApiMessenger.Domain.Entities.User", null)
                        .WithMany("Friends")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("webApiMessenger.Domain.Entities.GroupChat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("webApiMessenger.Domain.Entities.User", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("SendMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
